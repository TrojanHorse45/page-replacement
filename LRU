#include <stdio.h>

int fr[10]; // Frame array

// Function to display the current state of frames
void display(int frsize) {
    int i;
    printf("\n");
    for (i = 0; i < frsize; i++) {
        if (fr[i] != -1)
            printf("\t%d", fr[i]);
        else
            printf("\t-"); // Indicate empty frame
    }
}

int main() {
    int n, frsize, i, j, k, l, index;
    int flag1, flag2, pf = 0;

    // Taking user input for the reference string
    printf("Enter the number of pages in the reference string: ");
    scanf("%d", &n);
    int p[n];
    printf("Enter the reference string: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &p[i]);
    }

    // Taking user input for the frame size
    printf("Enter the frame size: ");
    scanf("%d", &frsize);

    int fs[frsize]; // Temporary array for page replacement
    for (i = 0; i < frsize; i++) {
        fr[i] = -1; // Initialize frames to -1
    }

    // Implementing Page Replacement Algorithm
    for (j = 0; j < n; j++) {
        flag1 = 0;
        flag2 = 0;

        // Check if the page is already in the frame
        for (i = 0; i < frsize; i++) {
            if (fr[i] == p[j]) {
                flag1 = 1; // Page hit
                flag2 = 1;
                break;
            }
        }

        // If the page is not in the frame
        if (flag1 == 0) {
            // Check for an empty frame
            for (i = 0; i < frsize; i++) {
                if (fr[i] == -1) {
                    fr[i] = p[j];
                    flag2 = 1;
                    break;
                }
            }
        }

        // If no empty frame, replace a page using the replacement algorithm
        if (flag2 == 0) {
            for (i = 0; i < frsize; i++) {
                fs[i] = 0;
            }

            // Mark the pages in the frame that were recently used
            for (k = j - 1, l = 1; l <= frsize - 1 && k >= 0; l++, k--) {
                for (i = 0; i < frsize; i++) {
                    if (fr[i] == p[k]) {
                        fs[i] = 1;
                    }
                }
            }

            // Find the page to replace (first page with fs[i] = 0)
            for (i = 0; i < frsize; i++) {
                if (fs[i] == 0) {
                    index = i;
                    break;
                }
            }

            // Replace the page
            fr[index] = p[j];
            pf++; // Increment page fault count
        }

        // Display the current state of the frames
        display(frsize);
    }

    printf("\nTotal number of page faults: %d\n", pf + frsize);

    return 0;
}
